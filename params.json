{"name":"Marvel-api","tagline":"Node.js wrapper for working with the official Marvel Comics API","body":"[![Build Status](https://travis-ci.org/fiveisprime/marvel-api.png?branch=master)](https://travis-ci.org/fiveisprime/marvel-api)\r\n\r\nHead over to [developer.marvel.com](http://developer.marvel.com) and sign up/in\r\nto get your API keys. Install the module using [npm](https://npmjs.org) and\r\ninitialize an API client using the public and private API keys for your\r\naccount.\r\n\r\n```js\r\nvar api = require('marvel-api');\r\n\r\nvar marvel = api.createClient({\r\n  publicKey: 'my-public-key'\r\n, privateKey: 'my-private-key'\r\n});\r\n```\r\n\r\nAll methods return promises but also accept a callback.\r\n\r\n..use the promise...\r\n\r\n```js\r\nmarvel.characters.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n..or use a callback.\r\n\r\n```js\r\nmarvel.characters.findAll(function(err, results) {\r\n  if (err) {\r\n    return console.error(err);\r\n  }\r\n\r\n  console.log(results);\r\n});\r\n```\r\n\r\n### Response Format\r\n\r\nThe response includes two properties, `data` which is the actual data returned\r\nfrom the request and `meta` which includes information about the result set\r\nsuch as the number of items retrieved, the total available items and the\r\ncurrent offset into the data. This allows some visibility into the data so that\r\nyou can make incremental requests to retrieve large datasets.\r\n\r\n```js\r\n{\r\n  data: [\r\n    {\r\n      id: 43495,\r\n      digitalId: 28150,\r\n      ...\r\n    },\r\n    {\r\n      id: 42566,\r\n      digitalId: 0,\r\n      ...\r\n    }\r\n  ],\r\n  meta: {\r\n    offset: 0,\r\n    limit: 20,\r\n    total: 2576,\r\n    count: 20\r\n  }\r\n}\r\n```\r\n\r\n### Example\r\n\r\nFind Spider-Man's ID then the first 20 comics he's been in.\r\n\r\n```js\r\nmarvel.characters.findByName('spider-man')\r\n  .then(function(res) {\r\n    console.log('Found character ID', res.data[0].id);\r\n    return marvel.characters.comics(res.data[0].id);\r\n  })\r\n  .then(function(res) {\r\n    console.log('found %s comics of %s total', res.meta.count, res.meta.total);\r\n    console.log(res.data);\r\n  })\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n# API\r\n\r\nthe API is broken into pieces based on the data that will be worked with. Each\r\nobject has methods for interacting with the specific bits of data for that\r\nobject with some reasonable defaults.\r\n\r\n## Characters\r\n\r\n###  #findAll\r\n\r\nFetch all characters within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 characters.\r\n\r\n```js\r\nmarvel.characters.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 characters.\r\n\r\n```js\r\nmarvel.characters.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 characters starting at index 30.\r\n\r\n```js\r\nmarvel.characters.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #findByName\r\n\r\nFetch characters (returns an array) with the specified name.\r\n\r\n```js\r\nmarvel.characters.findByName('spider-man')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single character with the specified ID.\r\n\r\n```js\r\nmarvel.characters.find('1011227')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #comics\r\n\r\nFetch a list of comics filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.characters.comics('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #events\r\n\r\nFetch a list of events filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.characters.events('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #stories\r\n\r\nFetch stories filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.characters.stories('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n## Creators\r\n\r\n###  #findAll\r\n\r\nFetch all creators within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 creators.\r\n\r\n```js\r\nmarvel.creators.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 creators.\r\n\r\n```js\r\nmarvel.creators.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 creators starting at index 30.\r\n\r\n```js\r\nmarvel.creators.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #findByName\r\n\r\nFetch creators (returns an array) with the specified name. A first name, middle\r\nname (option) and last name (option) can be specified.\r\n\r\nFetch by first name only.\r\n\r\n```js\r\nmarvel.creators.findByName('austin')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch by first and middle name only.\r\n\r\n```js\r\nmarvel.creators.findByName('austin', 'dave')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch by first, middle, and last name.\r\n\r\n```js\r\nmarvel.creators.findByName('austin', 'dave', 'cam')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single creator with the specified ID.\r\n\r\n```js\r\nmarvel.creators.find('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #comics\r\n\r\nFetch a list of comics filtered by creator ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.creators.comics('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #stories\r\n\r\nFetch a list of creators filtered by story ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.creators.stories('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n## Comics\r\n\r\n###  #findAll\r\n\r\nFetch all comics within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 comics.\r\n\r\n```js\r\nmarvel.comics.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 comics.\r\n\r\n```js\r\nmarvel.comics.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 comics starting at index 30.\r\n\r\n```js\r\nmarvel.comics.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single comic with the specified ID.\r\n\r\n```js\r\nmarvel.comics.find('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #characters\r\n\r\nFetch a list of comics filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.comics.characters('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #stories\r\n\r\nFetch a list of comics filtered by story ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.comics.stories('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n## Events\r\n\r\n###  #findAll\r\n\r\nFetch all events within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 events.\r\n\r\n```js\r\nmarvel.events.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 events.\r\n\r\n```js\r\nmarvel.events.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 events starting at index 30.\r\n\r\n```js\r\nmarvel.events.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #findByName\r\n\r\nFetch events (returns an array) with the specified name.\r\n\r\n```js\r\nmarvel.events.findByName('spider-man')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single event with the specified ID.\r\n\r\n```js\r\nmarvel.events.find('1011227')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #comics\r\n\r\nFetch a list of comics filtered by event ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.events.comics('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #characters\r\n\r\nFetch a list of characters filtered by event ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.events.characters('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #stories\r\n\r\nFetch stories filtered by event ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.events.stories('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n## Series\r\n\r\n###  #findAll\r\n\r\nFetch all series within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 series.\r\n\r\n```js\r\nmarvel.series.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 series.\r\n\r\n```js\r\nmarvel.series.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 series starting at index 30.\r\n\r\n```js\r\nmarvel.series.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #findByTitle\r\n\r\nFetch series (returns an array) with the specified title.\r\n\r\n```js\r\nmarvel.series.findByTitle('spider-man')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single series with the specified ID.\r\n\r\n```js\r\nmarvel.series.find('1011227')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #comics\r\n\r\nFetch a list of comics filtered by series ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.series.comics('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #events\r\n\r\nFetch a list of events filtered by series ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.series.events('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #stories\r\n\r\nFetch stories filtered by series ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.series.stories('1011334')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n## Stories\r\n\r\n###  #findAll\r\n\r\nFetch all stories within range. Accepts a limit and/or offset. Offset defaults\r\nto 0; limit defaults to 20 with a maximum of 100.\r\n\r\nFetch the first 20 stories.\r\n\r\n```js\r\nmarvel.stories.findAll()\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch the first 5 stories.\r\n\r\n```js\r\nmarvel.stories.findAll(5)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\nFetch 3 stories starting at index 30.\r\n\r\n```js\r\nmarvel.stories.findAll(3, 30)\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n###  #find\r\n\r\nFetch a single comic with the specified ID.\r\n\r\n```js\r\nmarvel.stories.find('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #characters\r\n\r\nFetch a list of stories filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.stories.characters('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n### #characters\r\n\r\nFetch a list of stories filtered by character ID.\r\n\r\nOptionally accepts a limit [20] and an offset [0].\r\n\r\n```js\r\nmarvel.stories.characters('4110')\r\n  .then(console.log)\r\n  .fail(console.error)\r\n  .done();\r\n```\r\n\r\n# License\r\n\r\nCopyright (c) 2014, Matt Hernandez <matt@modulus.io>\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\r\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}